// source: eganow/api/customer/onboarding_payload.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_api_field_behavior_pb = require('../../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
goog.exportSymbol('proto.eganow.api.customer.AuthCustomerResponse', null, global);
goog.exportSymbol('proto.eganow.api.customer.CheckCustomerAccountRequest', null, global);
goog.exportSymbol('proto.eganow.api.customer.CreateCustomerRequest', null, global);
goog.exportSymbol('proto.eganow.api.customer.LoginCustomerRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.customer.CreateCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.customer.CreateCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.customer.CreateCustomerRequest.displayName = 'proto.eganow.api.customer.CreateCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.customer.LoginCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.customer.LoginCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.customer.LoginCustomerRequest.displayName = 'proto.eganow.api.customer.LoginCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.customer.AuthCustomerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.customer.AuthCustomerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.customer.AuthCustomerResponse.displayName = 'proto.eganow.api.customer.AuthCustomerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.customer.CheckCustomerAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.customer.CheckCustomerAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.customer.CheckCustomerAccountRequest.displayName = 'proto.eganow.api.customer.CheckCustomerAccountRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.customer.CreateCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.customer.CreateCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.customer.CreateCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mobileNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tin: jspb.Message.getFieldWithDefault(msg, 5, ""),
    postalZipCode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    streetAddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    city: jspb.Message.getFieldWithDefault(msg, 8, ""),
    provinceState: jspb.Message.getFieldWithDefault(msg, 9, ""),
    digitalAddress: jspb.Message.getFieldWithDefault(msg, 10, ""),
    sector: jspb.Message.getFieldWithDefault(msg, 11, ""),
    industry: jspb.Message.getFieldWithDefault(msg, 12, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    password: jspb.Message.getFieldWithDefault(msg, 14, ""),
    authPin: jspb.Message.getFieldWithDefault(msg, 15, ""),
    otpValue: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.customer.CreateCustomerRequest}
 */
proto.eganow.api.customer.CreateCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.customer.CreateCustomerRequest;
  return proto.eganow.api.customer.CreateCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.customer.CreateCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.customer.CreateCustomerRequest}
 */
proto.eganow.api.customer.CreateCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTin(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalZipCode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvinceState(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDigitalAddress(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSector(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndustry(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthPin(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtpValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.customer.CreateCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.customer.CreateCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.customer.CreateCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMobileNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTin();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPostalZipCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStreetAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getProvinceState();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDigitalAddress();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSector();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getIndustry();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAuthPin();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getOtpValue();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mobile_number = 2;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getMobileNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setMobileNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string first_name = 3;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string last_name = 4;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tin = 5;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getTin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setTin = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string postal_zip_code = 6;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getPostalZipCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setPostalZipCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string street_address = 7;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getStreetAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setStreetAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string city = 8;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string province_state = 9;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getProvinceState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setProvinceState = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string digital_address = 10;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getDigitalAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setDigitalAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string sector = 11;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getSector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setSector = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string industry = 12;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getIndustry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setIndustry = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string country_code = 13;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string password = 14;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string auth_pin = 15;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getAuthPin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setAuthPin = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string otp_value = 16;
 * @return {string}
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.getOtpValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CreateCustomerRequest} returns this
 */
proto.eganow.api.customer.CreateCustomerRequest.prototype.setOtpValue = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.customer.LoginCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.customer.LoginCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.customer.LoginCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.customer.LoginCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.customer.LoginCustomerRequest}
 */
proto.eganow.api.customer.LoginCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.customer.LoginCustomerRequest;
  return proto.eganow.api.customer.LoginCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.customer.LoginCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.customer.LoginCustomerRequest}
 */
proto.eganow.api.customer.LoginCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.customer.LoginCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.customer.LoginCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.customer.LoginCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.customer.LoginCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string phone_number = 1;
 * @return {string}
 */
proto.eganow.api.customer.LoginCustomerRequest.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.LoginCustomerRequest} returns this
 */
proto.eganow.api.customer.LoginCustomerRequest.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.eganow.api.customer.LoginCustomerRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.LoginCustomerRequest} returns this
 */
proto.eganow.api.customer.LoginCustomerRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.customer.AuthCustomerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.customer.AuthCustomerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.customer.AuthCustomerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fullName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 9, ""),
    mobileNumber: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.customer.AuthCustomerResponse}
 */
proto.eganow.api.customer.AuthCustomerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.customer.AuthCustomerResponse;
  return proto.eganow.api.customer.AuthCustomerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.customer.AuthCustomerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.customer.AuthCustomerResponse}
 */
proto.eganow.api.customer.AuthCustomerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.customer.AuthCustomerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.customer.AuthCustomerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.customer.AuthCustomerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFullName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMobileNumber();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string access_token = 1;
 * @return {string}
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.AuthCustomerResponse} returns this
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.setAccessToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string full_name = 2;
 * @return {string}
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.getFullName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.AuthCustomerResponse} returns this
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.setFullName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string first_name = 3;
 * @return {string}
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.AuthCustomerResponse} returns this
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string last_name = 4;
 * @return {string}
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.AuthCustomerResponse} returns this
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string email = 9;
 * @return {string}
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.AuthCustomerResponse} returns this
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string mobile_number = 10;
 * @return {string}
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.getMobileNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.AuthCustomerResponse} returns this
 */
proto.eganow.api.customer.AuthCustomerResponse.prototype.setMobileNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.customer.CheckCustomerAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.customer.CheckCustomerAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.customer.CheckCustomerAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.customer.CheckCustomerAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantMobileNumber: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.customer.CheckCustomerAccountRequest}
 */
proto.eganow.api.customer.CheckCustomerAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.customer.CheckCustomerAccountRequest;
  return proto.eganow.api.customer.CheckCustomerAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.customer.CheckCustomerAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.customer.CheckCustomerAccountRequest}
 */
proto.eganow.api.customer.CheckCustomerAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantMobileNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.customer.CheckCustomerAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.customer.CheckCustomerAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.customer.CheckCustomerAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.customer.CheckCustomerAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantMobileNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string merchant_mobile_number = 1;
 * @return {string}
 */
proto.eganow.api.customer.CheckCustomerAccountRequest.prototype.getMerchantMobileNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.customer.CheckCustomerAccountRequest} returns this
 */
proto.eganow.api.customer.CheckCustomerAccountRequest.prototype.setMerchantMobileNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.eganow.api.customer);
